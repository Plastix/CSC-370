CSC 370 HS 2
Aidan Pieper
1/18/17

1. <B> ::= ε | <B>1<B> | <B>0<B>

2. <B> ::= ε | 1<B> | 0<B>
 
3. <P> ::= ε | 1 | 0 | 1<P>1 | 0<P>0

4. <Hex> ::= +<Digit> | -<Digit>
   <Digit> ::= <Digit><Digit> | 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | A | B | C | D | E | F

5. <PyFunc> ::= def <ID>(): | def <ID>(<Param>):
   <Param> ::= <ID> | <ID>,<Param>

6. <S-Exp> ::= <Literal>                            ;; Scheme Literals
            | <ID>                                  ;; Variable
            | (define <ID> <S-Exp>)                 ;; Variable definition 
            | (lambda (<ID>+) <S-Exp>+)     ;; Lambda
            | (<S-Exp> <S-Exp>*)                    ;; Function Application
            | (let ([<ID> <S-Exp>]+) <S-Exp>+)               ;; Let syntax

7. <JClass> ::= <Import>* <Modifer> <Class-Type> class <ID>{<Field>* <METHOD>*}
   <Import> ::= <Import><Import> | import <ID>;
   <Modifer> ::= ε | public | private | protected 
   <Field> ::= <Modifer> <Static> <Type> <ID>; 
            | <Modifier> <Static> <Type> <ID> = <J-Exp>;
   <Static> ::= ε | static
   <Class-Type> ::= ε | abstract | final 
   <Type> ::= byte | char | short | int | long | float | double | boolean | <ID>
